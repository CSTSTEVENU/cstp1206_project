extends layout

head
  meta(charset='UTF-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  block style
    link(rel='stylesheet' href='stylesheets/master.css')
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css' rel='stylesheet')
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js')
    script(async='' defer='' src='https://buttons.github.io/buttons.js')
    script(src='javascript/fabric.min.js')
    script(src='javascript/fabric_history.js')
    script(src='javascript/client.js')

body
  block content
    .parent
      .div2
        #bd-wrapper(ng-controller='CanvasControls')
        div(style='display: inline-block; margin-left: 10px')
          button#drawing-mode.btn.btn-info Cancel drawing mode
          button#save Save
          button#shape_button Shape
          br
          button#clear-canvas.btn.btn-info Delete
          button#undo.btn.btn-info Previous
          button#copy Copy
          button#paste Paste
          br
          input#myImage(type='file' accept='image/png, image/gif, image/jpeg')
          br
          button#showText Text
          #textToAddDiv(style='display:none')
            input#textToAdd(width='10')
            button#addText Save
          br
          .div
            #shape_list(style='display:none')
          span Font-family:
          select#font-family
            option(value='Times New Roman') Times New Roman
            option(value='Arial') Arial
            option(value='Verdana') Verdana
            option(value='Impact') Impact
            option(value='Tahoma') Tahoma
          #drawing-mode-options
            label(for='drawing-mode-selector') Mode:
            select#drawing-mode-selector
              option Pencil
              option Circle
              option Spray
              option Pattern
              option hline
              option vline
              option square
              option diamond
            br
            label(for='drawing-line-width') Line width:
            span.info 30
            input#drawing-line-width(type='range' value='30' min='0' max='150')
            br
            label(for='drawing-color') Line color:
            input#drawing-color(type='color' value='#005E7A')
            br
            label(for='drawing-shadow-color') Shadow color:
            input#drawing-shadow-color(type='color' value='#005E7A')
            br
            label(for='drawing-shadow-width') Shadow width:
            span.info 0
            input#drawing-shadow-width(type='range' value='0' min='0' max='50')
            br
            label(for='drawing-shadow-offset') Shadow offset:
            span.info 0
            input#drawing-shadow-offset(type='range' value='0' min='0' max='50')
        br
        br
        .div3
            canvas#c(width='800' height='800' style='border:1px solid #aaa')
    script.
      (function(){
      var mainScriptEl = document.getElementById('main');
      if (!mainScriptEl) return;
      var preEl = document.createElement('pre');
      var codeEl = document.createElement('code');
      codeEl.innerHTML = mainScriptEl.innerHTML;
      codeEl.className = 'language-javascript';
      preEl.appendChild(codeEl);
      document.getElementById('bd-wrapper').appendChild(preEl);
    })();
    script.
      (function() {
      window.addEventListener('load', function() {
      var canvas = this.__canvas || this.canvas,
      canvases = this.__canvases || this.canvases;
      canvas && canvas.calcOffset && canvas.calcOffset();
      if (canvases && canvases.length) {
      for (var i = 0, len = canvases.length; i < len; i++) {
      canvases[i].calcOffset();
      }
      }
      });
      })();
    script.
        loadShapes();
    script(src='javascript/whiteboard.js')
